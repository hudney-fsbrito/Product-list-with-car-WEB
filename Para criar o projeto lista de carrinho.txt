# Product List with Cart

## 1. Criar e configurar o projeto

- [ ] 1.1 Inicializar o projeto JavaScript;
- [ ] 1.2 Configurar o Vite;
- [ ] 1.3 Criar arquivos HTML e CSS;
- [ ] 1.4 Criar o arquivo de configuração TypeScript (`tsc --init`);

## 2. Criar a classe/objeto de Produto

- [ ] 2.1 Criar os atributos privados: `id`, `nome`, `valor`, `categoria`, `imagemUrl`;
- [ ] 2.2 Definir o construtor da classe e inicializar os atributos;
- [ ] 2.3 Criar os _getters_ dos atributos (se necessário);

## 3. Estruturar o HTML e CSS

- [ ] 3.1 Criar o componente de `Produto`;
  - [ ] 3.1.1 Criar e estilizar o container do componente;
  - [ ] 3.1.2 Criar e estilizar o elemento de `imagem`;
  - [ ] 3.1.3 Criar e estilizar o componente de botão `Add to Cart`;
  - [ ] 3.1.4 Criar e estilizar o elemento/div para guardar as informações: `nome`, `categoria`, e `preço`.
Para criar o projeto:


npm init -y
npm install ts-node -D
npx ts-node "./nome.ts"

npm init -y
npm install -D vite

No arquivo package.jason, colocar dentro de "script" a dependência:
 
"dev" : "vite", // iniciar servidor de desenvolvimento, apelidos: `vite dev`, `vite serve`
"build": "vite build", // construir para produção
"preview": "vite preview", // visualizar localmente a versão de produção

No arquivo HTML e na tag <script> colocar o atributo:

type="module"

Para a utilização de dados fictícios usa uma API chamada Faker:

npm install @faker-js/faker --save-dev

Para usar um id aleatório(gerador de id automático:
npm install uuid
import { v4 as uuidv4 } from 'uuid'; // renomeio a função
uuidv4(); // ⇨ gerará um id: '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d' 

